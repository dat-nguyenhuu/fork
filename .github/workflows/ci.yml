# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: ci-pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 21
#        uses: actions/setup-java@v2
#        with:
#          java-version: 21
#          distribution: 'adopt'
#
#      - name: Build with Maven
#        run: mvn clean package
#
#      - name: Check JAR file
#        run: ls target
#
#      - name: Run tests
#        run: mvn test

  docker:
#    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: 21
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean package

      - name: Generate docker image version
        id: generate-new-tag
        uses: ./.github/actions/generate-docker-version

      - name: Build Docker image
        id: build-docker
        run: |
          VERSION=${{ steps.generate-new-tag.outputs.new-tag }}
          docker build -t datnh99/demo-image:$VERSION .

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          VERSION=${{ steps.generate-new-tag.outputs.new-tag }}
          docker push datnh99/demo-image:$VERSION